{
  "version": 3,
  "sources": ["../../preact/hooks/src/index.js"],
  "sourcesContent": ["import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').StateUpdater<S>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').StateUpdater<S>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "argsChanged", "_pendingArgs", "useLayoutEffect", "__s", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__m", "mask", "flushAfterPaintEffects", "component", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "__v", "vnode", "parentDom", "__k", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "hasErrored", "HAS_RAF", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "oldArgs", "newArgs", "arg", "f"]
}
